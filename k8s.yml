apiVersion: v1
items:
# Namespace
- apiVersion: v1
  kind: Namespace
  metadata:
    name: spots
# Service (spots-ui)
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o k8s.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: spots-ui
    name: spots-ui
    namespace: spots
  spec:
    ports:
    - name: "3000"
      port: 3000
      targetPort: 80
    selector:
      io.kompose.service: spots-ui
  status:
    loadBalancer: {}
# Service (spots-api)
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o k8s.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: spots-api
    name: spots-api
    namespace: spots
  spec:
    ports:
    - name: "3333"
      port: 3333
      targetPort: 3333
    selector:
      io.kompose.service: spots-api
  status:
    loadBalancer: {}
# Deployment (spots-api)
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o k8s.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: spots-api
    name: spots-api
    namespace: spots
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: spots-api
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -o k8s.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/custom-network: "true"
          io.kompose.service: spots-api
      spec:
        containers:
        - image: ubuntu-vm.registry.local/spots-api
          imagePullPolicy: ""
          name: spots-api
          ports:
          - containerPort: 3333
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
# Deployment (spots-ui)
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o k8s.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: spots-ui
    name: spots-ui
    namespace: spots
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: spots-ui
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -o k8s.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/custom-network: "true"
          io.kompose.service: spots-ui
      spec:
        containers:
        - image: ubuntu-vm.registry.local/spots-ui
          imagePullPolicy: ""
          name: spots-ui
          ports:
          - containerPort: 80
          - containerPort: 3333
          resources: {}
        initContainers:
          - name: wait-for-dependent-service
            image: stefanevinance/wait-for-200
            env:
              - name: URL
                value: http://spots-api.spots.svc.cluster.local:3333/api/hello
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
# NetorkPolicy
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: custom-network
    namespace: spots
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/custom-network: "true"
    podSelector:
      matchLabels:
        io.kompose.network/custom-network: "true"
kind: List
metadata: {}

